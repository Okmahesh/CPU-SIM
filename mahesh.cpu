<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED offset CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED format CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="mahesh.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OP" type="required" numBits="4" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field53df09c6">
	</Field>
	<Field name="ADDR" type="required" numBits="12" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field22970575">
	</Field>
	<Field name="RR" type="required" numBits="16" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field94b5574">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" id="module.Register945e3ca" />
	<Register name="AR" width="12" id="module.Register479d763c" />
	<Register name="DR" width="16" id="module.Register5443d5ca" />
	<Register name="E" width="1" id="module.Register7094a23e" />
	<Register name="FGI" width="1" id="module.Register56694455" />
	<Register name="FGO" width="1" id="module.Register7ae9e432" />
	<Register name="I" width="1" id="module.Register30ce8320" />
	<Register name="IEN" width="1" id="module.Register659e4255" />
	<Register name="INPR" width="8" id="module.Register7949e95f" />
	<Register name="IR" width="16" id="module.Register4cb44a30" />
	<Register name="OUPR" width="8" id="module.Register8a70705" />
	<Register name="PC" width="12" id="module.Register1fbc60ae" />
	<Register name="S" width="1" id="module.Register29096117" />
	<Register name="T" width="1" id="module.Register47824bcc" />
	<Register name="TR" width="16" id="module.Register772df316" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY OUT" bit="0" register="module.Register7094a23e" halt="false" id="module.ConditionBitbe8544d" />
	<ConditionBit name="HALT BIT" bit="0" register="module.Register29096117" halt="true" id="module.ConditionBit698b8dfe" />

	<!--............. rams ..........................-->
	<RAM name="M" length="4096" cellSize="16" id="module.RAM3c027728" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="module.Register945e3ca" start="0" numBits="16" value="0" id="microinstruction.CpusimSet77e9e73f" />
	<Set name="E&lt;-0" register="module.Register7094a23e" start="0" numBits="1" value="0" id="microinstruction.CpusimSet2f291f51" />
	<Set name="FGI&lt;-0" register="module.Register56694455" start="0" numBits="1" value="0" id="microinstruction.CpusimSet252f2a91" />
	<Set name="FGO&lt;-0" register="module.Register7ae9e432" start="0" numBits="1" value="0" id="microinstruction.CpusimSet16e04a03" />
	<Set name="IEN&lt;-0" register="module.Register659e4255" start="0" numBits="1" value="0" id="microinstruction.CpusimSet2e0897ff" />
	<Set name="IEN&lt;-1" register="module.Register659e4255" start="0" numBits="1" value="1" id="microinstruction.CpusimSet49bcc6f8" />

	<!--............. test ..........................-->
	<Test name="if(AC!=0)Skip-1" register="module.Register945e3ca" start="0" numBits="16" comparison="NE" value="0" omission="1" id="microinstruction.Test159b06fc" />
	<Test name="if(AC[15]!=0) Skip-1 " register="module.Register945e3ca" start="15" numBits="1" comparison="NE" value="0" omission="1" id="microinstruction.Test1bff61e" />
	<Test name="if(AC[15]!=1) Skip-1 " register="module.Register945e3ca" start="15" numBits="1" comparison="NE" value="1" omission="1" id="microinstruction.Test6be22eb9" />
	<Test name="if(DR!=0) Skip-1 " register="module.Register5443d5ca" start="0" numBits="16" comparison="NE" value="0" omission="1" id="microinstruction.Test4446be3b" />
	<Test name="if(E!=0) Skip-1 " register="module.Register7094a23e" start="0" numBits="1" comparison="NE" value="0" omission="1" id="microinstruction.Test9a7eca9" />
	<Test name="if(FGI!=1) Skip-1 " register="module.Register56694455" start="0" numBits="1" comparison="NE" value="1" omission="1" id="microinstruction.Test7756f485" />
	<Test name="if(FGO!=0) Skip-1 " register="module.Register7ae9e432" start="0" numBits="1" comparison="NE" value="0" omission="1" id="microinstruction.Testd3b8b30" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1 " register="module.Register945e3ca" delta="1" id="microinstruction.Increment7c7d4bca" />
	<Increment name="AR&lt;-AR+1 " register="module.Register479d763c" delta="1" id="microinstruction.Increment4a092248" />
	<Increment name="DR&lt;-DR+1 " register="module.Register5443d5ca" delta="1" id="microinstruction.Incrementa3b1550" />
	<Increment name="PC&lt;-PC+1 " register="module.Register1fbc60ae" delta="1" id="microinstruction.Increment5b087d2c" />

	<!--............. shift .........................-->
	<Shift name="shl AC " type="logical" source="module.Register945e3ca" destination="module.Register945e3ca" direction="left" distance="1" id="microinstruction.Shift49fccbd" />
	<Shift name="shr AC " type="logical" source="module.Register945e3ca" destination="module.Register945e3ca" direction="right" distance="1" id="microinstruction.Shift2371bb1c" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC' " type="NOT" source1="module.Register945e3ca" source2="module.Register945e3ca" destination="module.Register945e3ca" id="microinstruction.Logical3d97ba70" />
	<Logical name="AC&lt;-AC^DR " type="AND" source1="module.Register945e3ca" source2="module.Register5443d5ca" destination="module.Register945e3ca" id="microinstruction.Logical67ec68e3" />
	<Logical name="E&lt;-E' " type="NOT" source1="module.Register7094a23e" source2="module.Register7094a23e" destination="module.Register7094a23e" id="microinstruction.Logicala5e4289" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR " type="ADD" source1="module.Register945e3ca" source2="module.Register5443d5ca" destination="module.Register945e3ca" id="microinstruction.Arithmetic1b8de375" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-T" source="module.Register47824bcc" srcStartBit="0" dest="module.Register945e3ca" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR1b498e4e" />
	<TransferRtoR name="AC(15)&lt;-E" source="module.Register7094a23e" srcStartBit="0" dest="module.Register945e3ca" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR1f6656b4" />
	<TransferRtoR name="AC&lt;-DR" source="module.Register5443d5ca" srcStartBit="0" dest="module.Register945e3ca" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR67d405db" />
	<TransferRtoR name="AR&lt;-IR(0-11)" source="module.Register4cb44a30" srcStartBit="4" dest="module.Register479d763c" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR13b6d41f" />
	<TransferRtoR name="AR&lt;-PC" source="module.Register1fbc60ae" srcStartBit="0" dest="module.Register479d763c" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR44da03d9" />
	<TransferRtoR name="AR&lt;-TR(4-15)" source="module.Register772df316" srcStartBit="4" dest="module.Register479d763c" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR69a43e00" />
	<TransferRtoR name="E&lt;-AC(15)" source="module.Register945e3ca" srcStartBit="15" dest="module.Register7094a23e" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR2e991432" />
	<TransferRtoR name="E&lt;-T" source="module.Register47824bcc" srcStartBit="0" dest="module.Register7094a23e" destStartBit="0" numBits="1" id="microinstruction.TransferRtoRbaa3bd2" />
	<TransferRtoR name="I&lt;-IR(3) " source="module.Register4cb44a30" srcStartBit="3" dest="module.Register30ce8320" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR1f7a25b5" />
	<TransferRtoR name="PC&lt;-AR" source="module.Register479d763c" srcStartBit="0" dest="module.Register945e3ca" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR57665c64" />
	<TransferRtoR name="T&lt;-AC(0) " source="module.Register945e3ca" srcStartBit="0" dest="module.Register47824bcc" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR3138fa3e" />
	<TransferRtoR name="T&lt;-E " source="module.Register7094a23e" srcStartBit="0" dest="module.Register47824bcc" destStartBit="0" numBits="1" id="microinstruction.TransferRtoR6b963360" />
	<TransferRtoR name="TR&lt;-PC " source="module.Register1fbc60ae" srcStartBit="0" dest="module.Register772df316" destStartBit="4" numBits="12" id="microinstruction.TransferRtoR258fe42a" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR(0-3)" ir="module.Register4cb44a30" id="microinstruction.Decode40ef1983" />

	<!--............. set condition bit .............-->
	<SetCondBit name="HLT " bit="module.ConditionBit698b8dfe" value="1" id="microinstruction.SetCondBit3670e2aa" />

	<!--............. io ............................-->
	<IO name="AC(0-7)&lt;-INPR " direction="input" type="integer" buffer="module.Register945e3ca" connection="[console]" id="microinstruction.IO6ca7ca37" />
	<IO name="OUTR&lt;-AC(0-7) " direction="output" type="integer" buffer="module.Register945e3ca" connection="[console]" id="microinstruction.IO3653dd3d" />

	<!--............. memory access .................-->
	<MemoryAccess name="DR&lt;-M[AR] " direction="read" memory="module.RAM3c027728" data="module.Register5443d5ca" address="module.Register479d763c" id="microinstruction.MemoryAccessec8f975" />
	<MemoryAccess name="IR&lt;-M[AR] " direction="read" memory="module.RAM3c027728" data="module.Register4cb44a30" address="module.Register479d763c" id="microinstruction.MemoryAccess3f9c3fb4" />
	<MemoryAccess name="M[AR]&lt;-AC " direction="write" memory="module.RAM3c027728" data="module.Register945e3ca" address="module.Register479d763c" id="microinstruction.MemoryAccess6d38ac02" />
	<MemoryAccess name="M[AR]&lt;-DR " direction="write" memory="module.RAM3c027728" data="module.Register5443d5ca" address="module.Register479d763c" id="microinstruction.MemoryAccess452a3ead" />
	<MemoryAccess name="M[AR]&lt;-TR " direction="write" memory="module.RAM3c027728" data="module.Register772df316" address="module.Register479d763c" id="microinstruction.MemoryAccessce0642c" />
	<MemoryAccess name="TR&lt;-M[AR] " direction="read" memory="module.RAM3c027728" data="module.Register772df316" address="module.Register479d763c" id="microinstruction.MemoryAccess52df8b9b" />

	<!--............. end ...........................-->
	<End id="microinstruction.End7aaf757e" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="microinstruction.TransferRtoR44da03d9" />
		<Microinstruction microRef="microinstruction.MemoryAccess3f9c3fb4" />
		<Microinstruction microRef="microinstruction.Increment5b087d2c" />
		<Microinstruction microRef="microinstruction.TransferRtoR13b6d41f" />
		<Microinstruction microRef="microinstruction.Decode40ef1983" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="ISZ_I" opcode="e" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="BSA_I" opcode="d" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="BUN_I" opcode="c" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="STA_I" opcode="b" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="LDA_I" opcode="a" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="ADD_I" opcode="9" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="AND_I" opcode="8" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="6" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="5" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" format="OP ADDR" >
		<Microinstruction microRef="microinstruction.MemoryAccess6d38ac02" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" format="OP ADDR" >
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f400" format="RR" >
		<Microinstruction microRef="microinstruction.IO3653dd3d" />
		<Microinstruction microRef="microinstruction.CpusimSet252f2a91" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" format="RR" >
		<Microinstruction microRef="microinstruction.IO6ca7ca37" />
		<Microinstruction microRef="microinstruction.CpusimSet252f2a91" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="7800" format="RR" >
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="7100" format="RR" >
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="7200" format="RR" >
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="7400" format="RR" >
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="7080" format="RR" >
		<Microinstruction microRef="microinstruction.TransferRtoR6b963360" />
		<Microinstruction microRef="microinstruction.TransferRtoR2e991432" />
		<Microinstruction microRef="microinstruction.Shift2371bb1c" />
		<Microinstruction microRef="microinstruction.TransferRtoR1b498e4e" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="7040" format="RR" >
		<Microinstruction microRef="microinstruction.TransferRtoR3138fa3e" />
		<Microinstruction microRef="microinstruction.Shift49fccbd" />
		<Microinstruction microRef="microinstruction.TransferRtoR1f6656b4" />
		<Microinstruction microRef="microinstruction.TransferRtoRbaa3bd2" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="7020" format="RR" >
		<Microinstruction microRef="microinstruction.Increment7c7d4bca" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="7010" format="RR" >
		<Microinstruction microRef="microinstruction.Test1bff61e" />
		<Microinstruction microRef="microinstruction.Increment5b087d2c" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="7008" format="RR" >
		<Microinstruction microRef="microinstruction.Test6be22eb9" />
		<Microinstruction microRef="microinstruction.Increment5b087d2c" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="7004" format="RR" >
		<Microinstruction microRef="microinstruction.Test159b06fc" />
		<Microinstruction microRef="microinstruction.Increment5b087d2c" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="7002" format="RR" >
		<Microinstruction microRef="microinstruction.Test9a7eca9" />
		<Microinstruction microRef="microinstruction.Increment5b087d2c" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="7001" format="RR" >
		<Microinstruction microRef="microinstruction.SetCondBit3670e2aa" />
		<Microinstruction microRef="microinstruction.End7aaf757e" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="module.RAM3c027728" startingAddress="0" />

	<!--............. module window info ............-->
	<ModuleWindowsInfo>
		<RAMWindowInfo ram="module.RAM3c027728" cellSize="1" contentsbase="Decimal" addressbase="Decimal" 
			top="60" left="60" width="450" height="450" />
		<RegisterWindowInfo base="Decimal" 
			top="53" left="818" width="300" height="335" />
	</ModuleWindowsInfo>

</Machine>
